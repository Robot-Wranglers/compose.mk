# See also: https://docs.github.com/en/actions
name: Image Testing Pipeline
env:
  COLUMNS: 200
on:
  workflow_dispatch: {}
  workflow_call: {}
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'
      - '**.md.j2'
      - '**.mmd'
      - '**.png'
      - '**.svg'
      - '**.gif'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'
      - '**.md.j2'
      - '**.mmd'
      - '**.png'
      - '**.svg'
      - '**.gif'
permissions:
  contents: read
# jobs:
#   test:
#     name: Notebook Pipeline
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - name: Initialize
#         run: make clean init docker.system.prune
#       - name: Test Notebook Pipeline
#         run: make actions.notebook.pipeline
#       # https://til.simonwillison.net/github-actions/debug-tmate
#       - name: tmate debugging session if tests fail
#         if: failure() && github.event_name == 'workflow_dispatch'
#         uses: mxschmitt/action-tmate@v3
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # - uses: actions/checkout@v3
      - uses: actions/checkout@v3
      - name: Initialize
        run: make clean init 
      - name: Install chafa
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq -y cargo && sudo rustup update stable && cargo install viu
          sudo apt-get install -qq -y chafa
      - name: Display test image
        run: |
          echo 1 
          #cat docs/img/networkx.png | width=120 ./compose.mk stream.viu
          viu docs/img/networkx.png
          echo 2 
          chafa -c full --symbols blocks docs/img/networkx.png
          echo 3 
          chafa -c none --fg-only --symbols braille docs/img/networkx.png
          echo 4 
          chafa -c full --fg-only --symbols block docs/img/networkx.png
          echo 5 
          chafa -c none --symbols block,dot,quad,braille docs/img/networkx.png
          echo 6 
          chafa -c none --fg-only --symbols dot,quad docs/img/networkx.png
          echo 7 
          chafa -c none -c full --symbols dot,quad,braille docs/img/networkx.png
          echo 8 
          chafa -c none --invert --symbols block,dot,quad docs/img/networkx.png

# chafa --invert -c 16 --invert --symbols all-space-inverted --fill none docs/img/icon.png 
# chafa -c 2 --color-space din99d --symbols all-ascii-space-extra --fill none docs/img/icon.png
# chafa --invert -c 2 --color-space din99d --symbols all-ascii-space-extra --fill none docs/img/icon.png
# chafa --invert -c none --color-space din99d --symbols all-ascii-space-extra --fill none docs/img/icon.png

# chafa - -c none --color-space din99d --symbols all-ascii-space-extra --fill none docs/img/icon.png
#chafa --color-space din99d --symbols braille --fill none docs/img/icon.png 
# chafa -c 16 --color-space din99d --symbols -dot-stipple docs/img/icon.png
# chafa --size=40x20 --symbols=block --fill=space docs/img/icon.png
# chafa --symbols=ascii docs/img/icon.png
# chafa --symbols=space,solid docs/img/icon.png 
# COLORTERM=truecolor TERM=xterm-256color chafa --symbols=ascii docs/img/icon.png 
# script -q -c "chafa --symbols=ascii docs/img/icon.png"
# stdbuf -o0 chafa --symbols=ascii docs/img/icon.png<...>