{% import 'macros.j2' as macros -%}

## API / CLI Documentation
<hr style="width:100%;border-bottom:3px solid black;">

A major advantage of `make` is that the programmatic interface *is* the command-line interface, and vice versa, so the documentation here is often relevant for [tool mode]({{mkdocs.site_relative_url}}/tool-overview) or [library mode]({{mkdocs.site_relative_url}}/standard-lib).

{#Your milage may vary though; for example much ofTUI interfaces are better thought of as "commands" and internals like [`flux.*`]({{mkdocs.site_relative_url}}/api#flux-api) or [`mk.*` targets]({{mkdocs.site_relative_url}}/api#mk-api) are normally just used in a scripting context.#}

Note that the autogenerated section of the API (i.e. scaffolded targets created by `compose.import`) is **not** presented here.. see instead the docs for the [Make/Compose Bridge]({{mkdocs.site_relative_url}}/bridge).

{#
### Scaffolded Targets
<hr style="width:100%;border-bottom:3px solid black;">

The autogenerated section of the API (i.e. what's created by `compose.import`) is documented as part of the [Make/Compose Bridge]({{mkdocs.site_relative_url}}/bridge).
### Static Targets
<hr style="width:100%;border-bottom:3px solid black;">

#}

This is the complete list of public targets available from `compose.mk`, along with their documentation.  Things are organized into a few namespaces, so hopefully if you're using this stuff programmatically that helps to avoid collisions with your project targets.  See [the module layout overview]({{mkdocs.site_relative_url}}/standard-lib/#module-layout) for more details.  Most documentation is pulled automatically from [the latest source]({{github.repo_url}}).  

Some important notes about how these targets work:

* **Target names are reserved names after declaration.**
* **Targets are usable interactively from your shell** as `make <target>` or `./compose.mk <target>`
* **Targets are usable as an API,** either as prereq-targets or as part of the body in your project automation.
* **Most targets are pure shell, and have no exotic dependencies.** That means that they generally run fine on host or as dispatched targets inside containers.

{#
| Namespace             | Description                                                                                         |
| --------------------- | --------------------------------------------------------------------------------------------------- |
| [*`io.*`* targets:]({{mkdocs.site_relative_url}}/api#api-io)           | Misc text-formatters, timers, and other utilities                                                          |
| [*`docker.*`* targets:]({{mkdocs.site_relative_url}}/api#api-docker)   | Simple helpers for working with docker.                                                                    |
| [*`flux.*`*]({{mkdocs.site_relative_url}}/api#api-flux)                | Miniature workflow library / pipe wizard.                                                                  |
| [*`tux.*`*  targets:]({{mkdocs.site_relative_url}}/api#api-tux)        | Embedded TUI support.                                                                                      |
| [*`mk.*`*  targets:]({{mkdocs.site_relative_url}}/api#api-mk)       | Low-level helpers for working with make.                                                                   |
| [*`stream.*`* targets:]({{mkdocs.site_relative_url}}/api#api-stream)   | Support for IO streams, including basic stuff with JSON, newline-delimited, and space-delimited formats.   |
#}


{% include "api/io.md.j2" %}

#### API: compose
<hr style="width:100%;border-bottom:3px solid black;">

{{macros.parse_module_help('compose.mk', 'compose')}}

{{macros.parse_help('compose.mk', 'compose', github)}}

#### API: docker
<hr style="width:100%;border-bottom:3px solid black;">

{{macros.parse_module_help('compose.mk', 'docker')}}

{{macros.parse_help('compose.mk', 'docker', github)}}

#### API: Dockerfile
<hr style="width:100%;border-bottom:3px solid black;">

{{macros.parse_module_help('compose.mk', 'Dockerfile')}}

{{macros.parse_help('compose.mk', 'Dockerfile', github)}}


{% include "api/flux.md.j2" %}

#### API: mk
<hr style="width:100%;border-bottom:3px solid black;">

{{macros.parse_module_help('compose.mk', 'mk')}}

{#
See especially the [Platform Setup Example]({{mkdocs.site_relative_url}}/demos#demo-platform-setup) for a more complete walk-through of motivation, starting from an example use-case.
#}

{{macros.parse_help('compose.mk','mk', github)}}

#### API: stream
<hr style="width:100%;border-bottom:3px solid black;">

{{macros.parse_module_help('compose.mk', 'stream')}}

{{macros.parse_help('compose.mk', 'stream', github)}}



