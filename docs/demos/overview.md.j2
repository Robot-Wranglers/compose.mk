## Overview of Demos

{% set div="\n###############################################################################\n" %}
{% set sections = open('tests/Makefile.mad-science.mk','r').read().split(div) %}

The demos in this section include some walk-through of the `compose.mk` capabilities.  Most demos are covering library use of `compose.mk` and basically building extensions, but some demos will also cover aspects of stand-alone / tool mode.  When we're scripting, you're usually reading ready-to-run code that's [available in the repository](#demos/) with related discussion, and the code itself runs as part of the test-suite.

## Caveats

Before we get into a guided tour, this is a good place for the obligatory disclaimer.

Many of the demonstrations here are serious, but it has to be said that some are frankly nuts, and most likely no one will thank you for introducing these techniques into real projects!  *Now, with that stern warning out of the way..*

some of the bad ideas in the [mad science test-suite]({{github.repo_url}}/tree/master/tests/Makefile.mad-science.mk).  You can run this test-suite from the project root with `make mad`.  See also the documentation about [raw docker support]({{mkdocs.site_relative_url}}/vanilla-docker).


Here are some very powerful techniques for "polyglotting" your Makefiles, or in other words **implementing different targets in different languages** and other weird things like that.  This is useful for prototyping, and with some judicious restraint then you can potentially improve on many things that are otherwise very awkward from `make` or `bash`.  But if you use it with wild abandon you'll probably regret it.  

Choose wisely ;)

<hr style="width:100%;border-bottom:3px solid black;">
